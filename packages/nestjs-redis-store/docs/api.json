{
  "id": 0,
  "name": "@cenk1cenk2/nestjs-redis-store",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "InjectRedisStoreService",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "decorator/inject.decorator.ts",
          "line": 5,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 2,
          "name": "InjectRedisStoreService",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "decorator/inject.decorator.ts",
                  "line": 5,
                  "character": 44
                }
              ],
              "signatures": [
                {
                  "id": 4,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 5,
                      "name": "target",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 6,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "symbol"
                          }
                        ]
                      }
                    },
                    {
                      "id": 7,
                      "name": "index",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 8,
      "name": "REDIS_STORE_INSTANCE",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "redis-store.constants.ts",
          "line": 1,
          "character": 13
        }
      ],
      "type": {
        "type": "query",
        "queryType": {
          "type": "reference",
          "id": 8,
          "name": "REDIS_STORE_INSTANCE"
        }
      },
      "defaultValue": "..."
    },
    {
      "id": 9,
      "name": "REDIS_STORE_DELIMITER",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "redis-store.constants.ts",
          "line": 3,
          "character": 13
        }
      ],
      "type": {
        "type": "literal",
        "value": "."
      },
      "defaultValue": "'.'"
    },
    {
      "id": 10,
      "name": "RedisPubSubModuleOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 11,
          "name": "global",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "redis-store.interface.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 12,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "redis-store.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "RedisOptions",
            "package": "ioredis",
            "name": "RedisOptions"
          }
        },
        {
          "id": 13,
          "name": "delimiter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "redis-store.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [11, 12, 13]
        }
      ],
      "sources": [
        {
          "fileName": "redis-store.interface.ts",
          "line": 3,
          "character": 17
        }
      ]
    },
    {
      "id": 14,
      "name": "RedisStoreModule",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "decorators": [
        {
          "name": "Global",
          "type": {
            "type": "reference",
            "qualifiedName": "Global",
            "package": "@nestjs/common",
            "name": "Global"
          },
          "arguments": {}
        },
        {
          "name": "Module",
          "type": {
            "type": "reference",
            "qualifiedName": "Module",
            "package": "@nestjs/common",
            "name": "Module"
          },
          "arguments": {
            "metadata": "{\n  providers: [\n    {\n      provide: REDIS_STORE_INSTANCE,\n      useFactory: (): RedisStoreService<any, any> =>\n        new RedisStoreService({\n          delimiter: REDIS_STORE_DELIMITER,\n          options: ConfigService.get<RedisOptions>('redisStore')\n        })\n    }\n  ],\n  exports: [ REDIS_STORE_INSTANCE ]\n}"
          }
        }
      ],
      "children": [
        {
          "id": 15,
          "name": "forRoot",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true,
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "redis-store.module.ts",
              "line": 25,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 16,
              "name": "forRoot",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 17,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 10,
                    "name": "RedisPubSubModuleOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "DynamicModule",
                "package": "@nestjs/common",
                "name": "DynamicModule"
              }
            }
          ]
        },
        {
          "id": 18,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 19,
              "name": "new RedisStoreModule",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 14,
                "name": "RedisStoreModule"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [15]
        },
        {
          "title": "Constructors",
          "kind": 512,
          "children": [18]
        }
      ],
      "sources": [
        {
          "fileName": "redis-store.module.ts",
          "line": 24,
          "character": 13
        }
      ]
    },
    {
      "id": 20,
      "name": "RedisStoreService",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "decorators": [
        {
          "name": "Injectable",
          "type": {
            "type": "reference",
            "qualifiedName": "Injectable",
            "package": "@nestjs/common",
            "name": "Injectable"
          },
          "arguments": {}
        }
      ],
      "children": [
        {
          "id": 26,
          "name": "client",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 11,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "Redis",
            "package": "ioredis",
            "name": "Redis"
          }
        },
        {
          "id": 21,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 13,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 22,
              "name": "new RedisStoreService",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 23,
                  "name": "RedisStoreTopics",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 24,
                  "name": "RedisStoreMap",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 23,
                        "name": "RedisStoreTopics"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 25,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 10,
                    "name": "RedisPubSubModuleOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 20,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 23,
                    "name": "RedisStoreTopics"
                  },
                  {
                    "type": "reference",
                    "id": 24,
                    "name": "RedisStoreMap"
                  }
                ],
                "name": "RedisStoreService"
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "onModuleInit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 15,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 28,
              "name": "onModuleInit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "implementationOf": {
                "type": "reference",
                "name": "OnModuleInit.onModuleInit"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "name": "OnModuleInit.onModuleInit"
          }
        },
        {
          "id": 29,
          "name": "createChild",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 19,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 30,
              "name": "createChild",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 31,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "reference",
                    "id": 23,
                    "name": "RedisStoreTopics"
                  }
                },
                {
                  "id": 32,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 31,
                        "name": "T"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  },
                  "default": {
                    "type": "reference",
                    "id": 24,
                    "name": "RedisStoreMap"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 20,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 31,
                    "name": "T"
                  },
                  {
                    "type": "reference",
                    "id": 32,
                    "name": "K"
                  }
                ],
                "name": "RedisStoreService"
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "set",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 27,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "set",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 35,
                  "name": "Pattern",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 36,
                  "name": "Data",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 37,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 35,
                    "name": "Pattern"
                  }
                },
                {
                  "id": 38,
                  "name": "extensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "defaultValue": "[]"
                },
                {
                  "id": 39,
                  "name": "payload",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 36,
                    "name": "Data"
                  }
                },
                {
                  "id": 40,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "RedisIOSetOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 41,
          "name": "get",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 48,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 42,
              "name": "get",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 43,
                  "name": "Pattern",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 44,
                  "name": "Data",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 45,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 43,
                    "name": "Pattern"
                  }
                },
                {
                  "id": 46,
                  "name": "extensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "defaultValue": "[]"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 44,
                    "name": "Data"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 47,
          "name": "rename",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 56,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 48,
              "name": "rename",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 49,
                  "name": "Pattern",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 50,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 49,
                    "name": "Pattern"
                  }
                },
                {
                  "id": 51,
                  "name": "extensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "defaultValue": "[]"
                },
                {
                  "id": 52,
                  "name": "newPattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 49,
                    "name": "Pattern"
                  }
                },
                {
                  "id": 53,
                  "name": "newExtensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "defaultValue": "[]"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 54,
          "name": "del",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 72,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 55,
              "name": "del",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 56,
                  "name": "Pattern",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 57,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 56,
                    "name": "Pattern"
                  }
                },
                {
                  "id": 58,
                  "name": "extensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  },
                  "defaultValue": "[]"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 59,
          "name": "getClient",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 78,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 60,
              "name": "getClient",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "qualifiedName": "Redis",
                "package": "ioredis",
                "name": "Redis"
              }
            }
          ]
        },
        {
          "id": 61,
          "name": "createTopic",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "redis-store.service.ts",
              "line": 82,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 62,
              "name": "createTopic",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 63,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 64,
                  "name": "extensions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [26]
        },
        {
          "title": "Constructors",
          "kind": 512,
          "children": [21]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [27, 29, 33, 41, 47, 54, 59, 61]
        }
      ],
      "sources": [
        {
          "fileName": "redis-store.service.ts",
          "line": 10,
          "character": 13
        }
      ],
      "typeParameter": [
        {
          "id": 65,
          "name": "RedisStoreTopics",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "default": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 66,
          "name": "RedisStoreMap",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 23,
                "name": "RedisStoreTopics"
              },
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          },
          "default": {
            "type": "intrinsic",
            "name": "any"
          }
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "qualifiedName": "OnModuleInit",
          "package": "@nestjs/common",
          "name": "OnModuleInit"
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Functions",
      "kind": 64,
      "children": [1]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [8, 9]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [10]
    },
    {
      "title": "Classes",
      "kind": 128,
      "children": [14, 20]
    }
  ],
  "sources": [
    {
      "fileName": "index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
